Avant Arrivée Sylvain : 
    - Refactor FrontEnd : 
        - Retrieve et Export Button
        - authenthication
        - query manuel
        - Enlever le selector du level series pour manual query => a voir ou faire un retrieve global ?
        - Reducer utiliser les splices (array doit etre copiée pour etre détectée) => Reste la result table autoQuery
    - Refactor BackEnd
        - Finir nettoyer routes et controlleurs
        - Swagger Documentation
        - Test Unitaires
    - Finir implementation level Series retrieve
        - Gerer la selection pour le robot...
        - Filtre sur le niveau Series => Contains et equal sur modality et series description
        - Gerer le robot pour qu'ils traites retrieve au niveau series et study
            - Si une serie est selectionnée alors n'importer que les series selectionnées au lieu de la study

Front : 
- voir ReduxThunk pour stocker de maniere globale les data https://dev.to/markusclaus/fetching-data-from-an-api-using-reactredux-55ao
    - En fait c'est un middleWare => Potentiellement utile pour passportJS => Voir cours Udemy
- Faire que le select all select tout les non filtre de toutes les pages ? => difficulté....
- Sous colonne modificatrice pour l'ensemble de la colonne quand table Query => Reste a faire le deselect avant edition
- Spliter firstName, LastName dans toutes les tables query / results ?

- Interface Suivi robot (pour un utilisateur)
    - Validation robot job
        - Soit manuelle par administrateur
        - Soit automatique lors declanchement robot (avant retrieve ? ou lors de la creation du job ?)
    - Export rapport Query / Retrieve (CSV)

- Interface suivi des robots (tous) pour un administrateur
    -   Validation d'un robot avant execution (fonction preset plateforme)
    -   Acces au robot de chaque utilisateur
    -   Fonction Pause 

- Settings
    - AutoQuery : 
        - Nombre limit de query si < limit => Retrieve auto
        - Heure de pause automatique ? (a partir 7h du mat ?)

- Module de Delete ressources d'Orthanc
    - Comme Anon et Export

- Module Anonymize
    - Faire un robot coté Backend
    - Execution automatique non differée
    - Pour chaque robot choix du profile d'anonymisation

- Module Export
    - Liste d'item avec possibilité de créer un ou plusieurs ZIP
        - Un button pour un Zip par item
        - Un boutton global pour toutes les ressources dans un ZIP
        - Choix hirachique (default) ou DicomDir
    - Retour du zip vers client
        - Stream du contenu
        - Attention au timemout (a tester)
    - Stockage ZIP vers backend ? (peut etre defini dans options)
    - Vers AET (quid storage commitment)
    - Sous module share vers FTP, SFTP, GaelO, Orthanc Peer ? 

- Module Import d'image
    - Montrer resultat de upload
        - Probablement meme composant que listing content orthanc

- Module Exploration Contenu d'Orthanc
    - GUI a reflechir
    - Modification de ressources
    - Preview d'images ? (Bof plutot OHIF)
    - Visualisation de Tag ?
    - API statisitics ?

- options
    - Restart d'orthanc
    - Changer le log level ?
    - Visualisation et declaration et test connexion de peers => Meme principes que AETs

- Module Disc Producer
- Module Monotoring
    - Prefetching
    - Database tag monitoring
    - Dicom Routing?


+ tard  : 
    - historique des query dans BDD pour relancer une ancienne requete

Back :
- Midelware securite acces robot => Reste a securiser les route pour lire le robot en fonction du role
https://jasonwatmore.com/post/2018/11/28/nodejs-role-based-authorization-tutorial-with-example-api
- Ne pas autoriser la modification du robot pendant son execetion (bug Pierre D)
- Tests : 
    Tester les controlleurs sur les methodes appelées
    Mock des API d'orthanc ?
- PassportJS pour stateless
- Envisager de switcher de Request à Got...

Tutos : 
https://towardsdatascience.com/react-best-practices-804def6d5215

Sequelize
https://stackabuse.com/using-sequelize-js-and-sqlite-in-an-express-js-app/

--Compilation
Executable windows avec wix ?

-- Documentation
https://medium.com/wolox-driving-innovation/documenting-a-nodejs-rest-api-with-openapi-3-swagger-5deee9f50420
In Orthanc :  set "DicomModalitiesInDatabase" : true