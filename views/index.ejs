<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <% include ../includes/librairies.ejs %>
  </head>
  <body class="jumbotron">
    <h1 class="text-center mb-5"><%= title %></h1>
    <div id="navBar" class="mb-5">
      <ul class="nav nav-pills nav-fill">
        <li class="nav-item">
          <a class="nav-link active">Add Query</a>
        </li>
        <li class="nav-item">
          <a class="nav-link">Query List</a>
        </li>
        <li class="nav-item">
          <a class="nav-link">Result answers</a>
        </li>
      </ul>
    </div>

    <div class="mainDiv" id="addQueryDiv" style="display: block">
      <div class="form-group">
        <label for="patientName">Patient Name</label>
        <input type="text" name="patientName" id="patientName" class="form-control" placeholder="last name" aria-describedby="helpId">
        <small id="helpId" class="text-muted">Help text</small>
      </div>
      <div class="form-group">
        <label for="firstName">First Name</label>
        <input type="text" name="firstName" id="firstName" class="form-control" placeholder="first name" aria-describedby="helpId">
        <small id="helpId" class="text-muted">Help text</small>
      </div>
      <div class="form-group">
        <label for="patientID">Patient ID</label>
        <input type="text" name="patientID" id="patientID" class="form-control" placeholder="Patient ID" aria-describedby="helpId">
        <small id="helpId" class="text-muted">Help text</small>
      </div>
      <div class="form-group">
        <label for="accessionNumber">Accession Number</label>
        <input type="text" name="accessionNumber" id="accessionNumber" class="form-control" placeholder="Accession Number" aria-describedby="helpId">
        <small id="helpId" class="text-muted">Help text</small>
      </div>
      <div class="form-group">
        <label for="dateFrom">Date From</label>
        <input type="date" name="dateFrom" id="dateFrom" class="form-control" placeholder="Date From" aria-describedby="helpId">
        <small id="helpId" class="text-muted">Help text</small>
      </div>
      <div class="form-group">
        <label for="dateTo">Date To</label>
        <input type="date" name="dateTo" id="dateTo" class="form-control" placeholder="Date To" aria-describedby="helpId">
        <small id="helpId" class="text-muted">Help text</small>
      </div>
      <div class="form-group">
        <label for="studyDescription">Study Description</label>
        <input type="text" name="studyDescription" id="studyDescription" class="form-control" placeholder="Study Description" aria-describedby="helpId">
        <small id="helpId" class="text-muted">Help text</small>
      </div>
      <div class="form-group">
        <label for="modality">Modality</label>
        <select class="form-control" name="modality" id="modality" multiple>
          <option value="CT">CT</option>
          <option value="PT">PT</option>
          <option value="NM">NM</option>
          <option value="MR">MR</option>
          <option value="US">US</option>
          <option value="MG">MG</option>
        </select>
        <small id="helpId" class="text-muted">Help text</small>
      </div>
      <div class="form-group text-center">
        <h3>Query AET</h3>
        <% availableAets.forEach(aetName => { 
          %> <input type="button" class="btn btn-info queryAET" value="<%= aetName%>"> 
        <%  
        }); %> 
      </div>
    </div>
    <div class="mainDiv" id="queryListDiv" style="overflow:x ; display: none;">
      <div>
        <input type="file" id="files" multiple="">
        <input type="button" class="btn btn-primary" id="parseBtn" value="Parse">
      </div>

      <table class="table table-striped" id="requestTable" style="text-align:center; width:100%">
        <thead>
          <tr>
            <td>Name</td>
            <td>ID</td>
            <td>Accession Number</td>
            <td>Date From</td>
            <td>Date To</td>
            <td>Study Description</td>
            <td>Modality</td>
            <td>AET</td>
            <td>Delete</td>
          </tr>
        </thead>
        <tbody>
          
        </tbody>
      </table>
      <input type="button" id="queryList" value="Query List" class="btn btn-info">
    </div>

    <div class="mainDiv" id="resultQueryDiv" style="overflow:x ; display: none">
      <table class="table table-striped" id="resultTable" style="text-align:center; width:100%">
        <thead>
          <tr>
          <td>Answer Id</td>
          <td>Answer Number</td>
          <td>Patient Name</td>
          <td>Patient ID</td>
          <td>Accession Number</td>
          <td>Acquistion Date</td>
          <td>Study Description</td>
          <td>Source AET</td>
          <td>StudyInstanceUID</td>
          <td>Retrieve</td>
          <td>JobID</td>
          <td>Progress</td>
          <td>Export</td>
          </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </div>
  </body>

  <script type="text/javascript">

    $("#navBar").on('click', '.nav-link', function(){
      $(".nav-link").removeClass('active')
      $(this).addClass('active')
      let item=$(this).text();
      $(".mainDiv").css('display','none');

      if(item=='Add Query'){
        $("#addQueryDiv").css('display','block');
      }else if(item=='Query List'){
        $("#queryListDiv").css('display','block');
      }else if(item=='Result answers'){
        $("#resultQueryDiv").css('display','block');
      }
      drawTables();
    })

    function drawTables(){
      let requestTable = $('#requestTable').DataTable().draw();
      let resultTable = $('#resultTable').DataTable().draw();

    }
    $("#modality").chosen();
    $("#requestTable").DataTable({
        "sDom": 'Blrtip',
        "select": {
                style: 'os'
        },
        buttons: [{
          extend: 'collection',
          text: 'Export',
          buttons: [
            'copy',
            'csv',
            'pdf',
            'print'
          ]
        }],
        "bSortCellsTop": true,
        "scrollX": true
    });

    function getDeleteButton(){
      let deleteButton='<input type="button" class="btn btn-danger removeRow" value="remove">';
      return deleteButton;
    }
    
    let resultTable=$("#resultTable").DataTable({"sDom": 'Blrtip',
        "select": {
                style: 'os'
        },
        buttons: [{
          extend: 'collection',
          text: 'Export',
          buttons: [
            {
              text: 'Remove',
              action: function () {
                  var rows = resultTable.rows('.selected');
                  rows.remove();
                  drawTables();
              }
     					    
            },
            'copy',
            'csv',
            'pdf',
            'print'
          ]
        }],
        "bSortCellsTop": true,
        "scrollX": true,
        "columnDefs": [
            {
                "targets": [ 0 ],
                "visible": false
            },            {
                "targets": [ 1 ],
                "visible": false
            },
            {
                "targets": [ 10 ],
                "visible": false
            }
        ]});


    $(".queryAET").on('click', function(){
      let nameString=$("#patientName").val()+$("#firstName").val();
      let patientID=$("#patientID").val();
      let accessionNumber=$("#accessionNumber").val();
      let dateFrom=$("#dateFrom").val().split('-').join('');
      let dateTo=$("#dateTo").val().split('-').join('');
      let studyDescription=$("#studyDescription").val();
      let modalities=$("#modality").val().join('/');
      let aet=$(this).val();
      
      if(dateFrom==''){
        dateFrom='*'
      }

      if(dateTo==''){
        dateTo='*'
      }

      var table = $('#requestTable').DataTable();
 
      var rowNode = table
          .row.add( [ nameString , patientID , accessionNumber , dateFrom, dateTo, studyDescription, modalities, aet, getDeleteButton() ] )
          .draw()
          .node();

    });

    $("#requestTable").on('click', '.removeRow', function() {
        var table = $('#requestTable').DataTable();
        var row = table.row( $(this).parents('tr') );
        var rowNode = row.node();
        row.remove();
        drawTables();
        
    });

    $("#queryList").on('click', function() {
      let table = $('#requestTable').DataTable();
      let tableResults = $('#resultTable').DataTable();
      table.rows().eq(0).each( function ( index ) {
        let row = table.row( index );
        let data = row.data();
        let buttonRetrieveString='<input class="retriveButton btn btn-primary" type="button" value="Retrieve">';

        $.ajax({
          url: 'query',
          type : 'POST',
          dataType: 'json',
          data : { patientName : data[0], patientID : data[1], accessionNumber : data[2], date : data[3]+'-'+data[4],
                  studyDescription : data[5], modality : data[6], aet : data[7]},
          success : function(data){
            data.forEach(element=>{
              tableResults.row.add( [element.answerId , element.answerNumber, element.patientName, element.patientID, element.accessionNumber, element.studyDate, element.studyDescription, 
                                  element.originAET, element.studyInstanceUID, buttonRetrieveString, '', 'N/A', 'N/A'] )
            
            })
            drawTables();
          }

        })
      } );

      
    });

    $("#resultTable").on('click', '.retriveButton', function(){
      let tableResult = $('#resultTable').DataTable();
      let rowIndex=tableResult.row( $(this).parents('tr') ).index();
      var data = tableResult.row( $(this).parents('tr') ).data();
      $(this).removeClass('btn-primary').addClass('btn-success').attr("disabled","disabled");

      $.ajax({
          url: 'retrieve',
          type : 'POST',
          dataType: 'json',
          data : { queryID : data[0], answerNumber : data[1]},
          success : function(data){
            tableResult.cell(rowIndex,10).data(data);
            tableResult.cell(rowIndex,11).data(0);
            tableResult.draw('page');
            checkProgress();
          }

        })


    })

    let progressListenerList=[];
    function checkProgress(){
      let tableResults = $('#resultTable').DataTable();
      let rows= tableResults.rows();
      rows.every(function(){
        let rowData=this.data();
        console.log(rowData[10]);
        if(rowData[10] != "" && !progressListenerList.includes(this.index()) ){
          console.log('add watcher');
          progressListenerList.push(this.index());
          addProgressWatcher(this);
        }
      })
    }

    function addProgressWatcher(row){
      console.log("ici watcher");
      console.log(row);
      let tableResults = $('#resultTable').DataTable();
      let ajaxCall=function(callback) {
        $.ajax({
          url: 'job_details',
          type : 'POST',
          dataType: 'json',
          data : { jobUid : row.data()[10]},
          success : function(data){
            tableResults.cell(row.index(),11).data(data.Progress);
            callback(data.Progress);
          }
        });

      }
        

      let watcher=setInterval( async function(){
          await jobMonitoringPromise(tableResults, row);
          if(row.data()[11]==100){
            console.log('clearInterval');
            tableResults.cell(row.index(),12).data('<input type="button" class="btn btn-primary exportDicom" value="Export Dicom">');
            tableResults.draw('page');
            clearInterval(watcher);
          }
      } , 3000 );
      

    }

    function jobMonitoringPromise(tableResults, row){
      let promise = new Promise((resolve, reject)=>{
        $.ajax({
          url: 'job_details',
          type : 'POST',
          dataType: 'json',
          data : { jobUid : row.data()[10]},
          success : function(data){
            tableResults.cell(row.index(),11).data(data.Progress);
            resolve(data.Progress);
          }
        });

      });

      return promise;
    }

    $("#resultTable").on('click', '.exportDicom', function() {
      let tableResults = $('#resultTable').DataTable();
      let row=tableResults.row( $(this).parents('tr') );
      $.ajax({
          url: 'export_dicom',
          type : 'POST',
          dataType: 'json',
          data : { studyUID : row.data()[8]},
          success : function(data){
            console.log(data);
            tableResults.cell(row.index(),12).data('Exported '+data.fileName);
          }
        });

    });

    let parseCsv=function () {
      $('input[type=file]').parse({
      config: {
        complete: completeFn// base config to use for each file
      },
      before: function(file, inputElem)
      {
        console.log(file);
        // executed before parsing each file begins;
        // what you return here controls the flow
      },
      error: function(err, file, inputElem, reason)
      {
        // executed if an error occurs while loading the file,
        // or if before callback aborted for some reason
      },
      complete: function(result, file)
      {
        console.log('done');
        // executed after all files are complete
      }
      })
    };

    $("#parseBtn").on('click', function(){
      parseCsv();
    })

    function completeFn(result, file){
      let tableRequest = $('#requestTable').DataTable();
      let i=1;
      let csvData=result.data;
      for( i=1; i<csvData.length ; i++){

        tableRequest.row.add( [csvData[i][0] , csvData[i][1], csvData[i][2], csvData[i][3], csvData[i][4], csvData[i][5], csvData[i][6], 
                                csvData[i][7], getDeleteButton() ] )
 
        console.log(result.data[i]);
      }
      drawTables();
      
    }


  </script>
</html>
