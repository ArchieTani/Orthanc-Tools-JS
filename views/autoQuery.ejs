<!DOCTYPE html>
<html>

  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <% include ../includes/librairies.ejs %>
  </head>

  <body>
    <h1 class="text-center mb-5"><%= title %></h1>
    
    <div id="navBar" class="mb-5">
      <ul class="nav nav-pills nav-fill">
        <li class="nav-item">
          <a class="nav-link active">Add Query</a>
        </li>
        <li class="nav-item">
          <a class="nav-link">Result answers</a>
        </li>
      </ul>
    </div>
    
    <div class="mainDiv" id="addQueryDiv" style="display: block">
      
      <div class="jumbotron">
          <h2 class="card-title">Manual Input</h2>
          <div class="row">
            <div class="col-sm">
              <label for="lastName">Last Name</label>
              <input type="text" name="lastName" id="lastName" class="form-control" placeholder="last name">
            </div>
            <div class="col-sm">
              <label for="firstName">First Name</label>
              <input type="text" name="firstName" id="firstName" class="form-control" placeholder="first name">
            </div>
            <div class="col-sm">
              <label for="patientID">Patient ID</label>
              <input type="text" name="patientID" id="patientID" class="form-control" placeholder="Patient ID">
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <label for="accessionNumber">Accession Number</label>
                <input type="text" name="accessionNumber" id="accessionNumber" class="form-control" placeholder="Accession Number">
            </div>
            <div class="col-sm">
                <label for="studyDescription">Study Description</label>
                <input type="text" name="studyDescription" id="studyDescription" class="form-control" placeholder="Study Description">
            </div>
            <div class="col-sm">
              <label for="modality">Modality</label>
              <select class="form-control" name="modality" id="modality" multiple>
                <option value="CT">CT</option>
                <option value="PT">PT</option>
                <option value="NM">NM</option>
                <option value="MR">MR</option>
                <option value="US">US</option>
                <option value="MG">MG</option>
              </select>
            </div>

        </div>
        <div class="row">
          <div class="col-sm">
              <label for="dateFrom">Date From</label>
              <input type="date" name="dateFrom" id="dateFrom" class="form-control" placeholder="Date From">
            </div>
            <div class="col-sm">
              <label for="dateTo">Date To</label>
              <input type="date" name="dateTo" id="dateTo" class="form-control" placeholder="Date To">
            </div>
        </div>
        
        <div class="row text-center mt-5">
              <% availableAets.forEach(aetName => { 
                %> <div class="col-sm">
                  <input type="button" class="btn btn-info btn-large queryAET" value="<%= aetName%>">
                </div> 
              <%  
              }); %> 
        </div>
      </div>

      <div>
        <div class="jumbotron">
          <h2 class="card-title">CSV</h2>
          <div class="row">
            <input type="file" id="files" multiple="">
            <input type="button" class="btn btn-primary" id="parseBtn" value="Parse">
          </div>
        </div>
      </div>
      <div class="jumbotron">
        <table class="table table-striped" id="requestTable" style="text-align:center; width:100%">
          <thead>
            <tr>
              <td>Name</td>
              <td>ID</td>
              <td>Accession Number</td>
              <td>Date From</td>
              <td>Date To</td>
              <td>Study Description</td>
              <td>Modality</td>
              <td>AET</td>
            </tr>
            <tr id="requestSearch">
              <th><input type="text" placeholder="Search" class="column_search"/></th>
              <th><input type="text" placeholder="Search" class="column_search"/></th>
              <th><input type="text" placeholder="Search" class="column_search"/></th>
              <th><input type="text" placeholder="Search" class="column_search"/></th>
              <th><input type="text" placeholder="Search" class="column_search"/></th>
              <th><input type="text" placeholder="Search" class="column_search"/></th>
              <th><input type="text" placeholder="Search" class="column_search"/></th>
              <th><input type="text" placeholder="Search" class="column_search"/></th>
            </tr>
          </thead>
          <tbody>
            
          </tbody>
        </table>
        <input type="button" id="queryList" value="Query List" class="btn btn-info">
      </div>
    </div>

    <div class="mainDiv jumbotron" id="resultQueryDiv" style="overflow:x ; display: none">
      <h2 class="mb-5">Results</h2>
      <table class="table table-striped" id="resultTable" style="text-align:center; width:100%">
        <thead>
          <tr>
          <td>Answer Id</td>
          <td>Answer Number</td>
          <td>Patient Name</td>
          <td>Patient ID</td>
          <td>Accession Number</td>
          <td>Acquistion Date</td>
          <td>Study Description</td>
          <td>Modalities In Study</td>
          <td>Source AET</td>
          <td>StudyInstanceUID</td>
          <td>Retrieve</td>
          <td>JobID</td>
          <td>Progress</td>
          <td>Export</td>
          </tr>
          <tr id="resultSearch">
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
            <th><input type="text" placeholder="Search" class="column_search"/></th>
          </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
      <input type="button" id="retrieveAll" value="retrieve All" class="btn btn-primary">
    </div>

    <div>
      <% orthancInfo %>
    </div>
  </body>

  <script type="text/javascript">

    $("#navBar").on('click', '.nav-link', function(){
      $(".nav-link").removeClass('active')
      $(this).addClass('active')
      let item=$(this).text();
      $(".mainDiv").css('display','none');

      if(item=='Add Query'){
        $("#addQueryDiv").css('display','block');
      }else if(item=='Result answers'){
        $("#resultQueryDiv").css('display','block');
      }
      drawTables();
    })

    function drawTables(){
      requestTable = $('#requestTable').DataTable().draw();
      resultTable = $('#resultTable').DataTable().draw();
    }

    $("#modality").chosen();

    $('#requestSearch').on('keyup', ".column_search", function() {
			requestTable.column($(this).parent().index()+':visible')
				.search(this.value)
				.draw();
		});

    $('#resultSearch').on('keyup', ".column_search", function() {
			resultTable.column($(this).parent().index()+':visible')
				.search(this.value)
				.draw();
		});

    let requestTable = $("#requestTable").DataTable({
        "sDom": 'Blrtip',
        "select": {
          style: 'os'
        },
        buttons: [
          {
          text: 'Remove',
          action: function () {
              var rows = requestTable.rows('.selected');
              rows.remove();
              drawTables();
            }
          },
          {
          extend: 'collection',
          text: 'Export',
          buttons: [
            'copy',
            'csv',
            'pdf',
            'print'
          ]
        }],
        "bSortCellsTop": true,
        "scrollX": true
    });
    
    let resultTable=$("#resultTable").DataTable({
        "sDom": 'Blrtip',
        "select": {
                style: 'os'
        },
        buttons: [
            {
              text: 'Remove',
              action: function () {
                  var rows = resultTable.rows('.selected');
                  rows.remove();
                  drawTables();
              }
     					    
            },
            {
            extend: 'collection',
            text: 'Export',
            buttons:[
                {              
                extend: 'copyHtml5',
                exportOptions: {
                      columns: [ 2,3,4,5,6,7,8 ]
                  }
                },
                {               
                text: 'csv',
                action : function(){
                  var rowsData = resultTable.rows().data();
                  csvData={
                    fields : ['Name','ID','Accession Number','Date From','Date To','Study Description','Modality','AET'],
                    data : []
                  }

                  rowsData.each((rowData, index)=>{
                    csvData.data.push([rowData[2], rowData[3], rowData[4] , rowData[5], rowData[5], rowData[6], rowData[7],rowData[8] ])
                  });

                  let csvString=Papa.unparse(csvData);
                  download('export_result.csv', csvString);
                  
                  }

                },
                {
                extend: 'pdfHtml5',
                exportOptions: {
                      columns: [ 2,3,4,5,6,7,8 ]
                  }
                },
                {
                extend: 'print',
                exportOptions: {
                      columns: [ 2,3,4,5,6,7,8 ]
                  }
                }
            ]
            }
        ],
        "bSortCellsTop": true,
        "scrollX": true,
        "columnDefs": [
            {
                "targets": [ 0,1,9 ],
                "visible": false
            }
        ]});

    $(".queryAET").on('click', function(){
      let nameString=$("#lastName").val()+$("#firstName").val();
      let patientID=$("#patientID").val();
      let accessionNumber=$("#accessionNumber").val();
      let dateFrom=$("#dateFrom").val().split('-').join('');
      let dateTo=$("#dateTo").val().split('-').join('');
      let studyDescription=$("#studyDescription").val();
      let modalities=$("#modality").val().join('/');
      let aet=$(this).val();
      
      if(dateFrom==''){
        dateFrom='*'
      }

      if(dateTo==''){
        dateTo='*'
      }
 
      requestTable.row.add( [ nameString , patientID , accessionNumber , dateFrom, dateTo, studyDescription, modalities, aet ] )
          .draw()
          .node();

    });

    function download(filename, text) {
      var element = document.createElement('a');
      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
      element.setAttribute('download', filename);
      element.style.display = 'none';
      document.body.appendChild(element);
      element.click();
      document.body.removeChild(element);
    }

    $("#queryList").on('click', function() {
      requestTable.rows().eq(0).each( function ( index ) {
        let row = requestTable.row( index );
        let data = row.data();
        let buttonRetrieveString='<input class="retriveButton btn btn-primary" type="button" value="Retrieve">';

        $.ajax({
          url: 'query',
          type : 'POST',
          dataType: 'json',
          data : { patientName : data[0], patientID : data[1], accessionNumber : data[2], date : data[3]+'-'+data[4],
                  studyDescription : data[5], modality : data[6], aet : data[7]},
          success : function(data){
            data.forEach(element=>{
              resultTable.row.add( [element.answerId , element.answerNumber, element.patientName, element.patientID, element.accessionNumber, element.studyDate, element.studyDescription, 
                                  element.modalitiesInStudy,element.originAET, element.studyInstanceUID, buttonRetrieveString, '', 'N/A', 'N/A'] )
            
            })
            
          }
        })
      });

      drawTables();
      
    });

    $("#resultTable").on('click', '.retriveButton', function(){
      let rowIndex=resultTable.row( $(this).parents('tr') ).index();
      var data = resultTable.row( $(this).parents('tr') ).data();
      $(this).removeClass('btn-primary').addClass('btn-success').attr("disabled","disabled");

      $.ajax({
          url: 'retrieve',
          type : 'POST',
          dataType: 'json',
          data : { queryID : data[0], answerNumber : data[1]},
          success : function(data){
            resultTable.cell(rowIndex,11).data(data);
            resultTable.cell(rowIndex,12).data(0);
            resultTable.draw('page');
            checkProgress();
          }
      })

    })

    let progressListenerList=[];
    function checkProgress(){
      let rows= resultTable.rows();
      rows.every(function(){
        let rowData=this.data();
        console.log(rowData[10]);
        if(rowData[11] != "" && !progressListenerList.includes(this.index()) ){
          console.log('add watcher');
          progressListenerList.push(this.index());
          addProgressWatcher(rowData, this.index());
        }
      })
    }

    function addProgressWatcher(rowData, rowIndex){
      
      let ajaxCall=function(callback) {
        console.log(rowData);
        $.ajax({
          url: 'job_details',
          type : 'POST',
          dataType: 'json',
          data : { jobUid : rowData[11]},
          success : function(data){
            resultTable.cell(rowIndex,12).data(data.Progress);
            callback(data.Progress);
          }
        });

      }
        

      let watcher=setInterval( async function(){
          await jobMonitoringPromise(rowData, rowIndex);
          if(rowData[12]==100){
            console.log('clearInterval');
            resultTable.cell(rowIndex,13).data('<input type="button" class="btn btn-primary exportDicom" value="Export Dicom">');
            resultTable.draw('page');
            clearInterval(watcher);
          }
      } , 3000 );
      

    }

    function jobMonitoringPromise(rowData, rowIndex){
      let promise = new Promise((resolve, reject)=>{
        $.ajax({
          url: 'job_details',
          type : 'POST',
          dataType: 'json',
          data : { jobUid : rowData[11]},
          success : function(data){
            resultTable.cell(rowIndex,12).data(data.Progress);
            resolve(data.Progress);
          }
        });

      });

      return promise;
    }

    $("#resultTable").on('click', '.exportDicom', function() {
      let row=resultTable.row( $(this).parents('tr') );
      $.ajax({
          url: 'export_dicom',
          type : 'POST',
          dataType: 'json',
          data : { studyUID : row.data()[9]},
          beforeSend : function(jqXHR, settings ){
            resultTable.cell(row.index(),13).data('Exporting');
          },
          success : function(data){
            console.log(data);
            resultTable.cell(row.index(),13).data('Exported '+data.fileName);
          }
        });

    });

    $("#retrieveAll").on('click', function(){

      let rows= resultTable.rows('.selected');
      let retrieveArray=[]
      rows.every(function(){
        let rowData=this.data();

        console.log(rowData);

        let retrieveData={
          "patientName": rowData[2],
          "patientID": rowData[3],
          "studyDate": rowData[5],
          "modality": rowData[7],
          "studyDescription": rowData[6],
          "accessionNb": rowData[4],
          "aet" : rowData[8]
        }

        retrieveArray.push(retrieveData)

      })
      console.log(retrieveArray)
      $.ajax({
          url: 'create_robot',
          type : 'POST',
          dataType: 'json',
          contentType: "application/json",
          data : JSON.stringify({ studyArray : retrieveArray}),
          success : function(data){
            console.log(data);
          }
        });

    })

    let parseCsv=function () {
      $('input[type=file]').parse({
      config: {
        complete: completeFn// base config to use for each file
      },
      before: function(file, inputElem)
      {
        console.log(file);
        // executed before parsing each file begins;
        // what you return here controls the flow
      },
      error: function(err, file, inputElem, reason)
      {
        // executed if an error occurs while loading the file,
        // or if before callback aborted for some reason
      },
      complete: function(result, file)
      {
        console.log('done');
        // executed after all files are complete
      }
      })
    };

    $("#parseBtn").on('click', function(){
      parseCsv();
    })

    function completeFn(result, file){
      let i=1;
      let csvData=result.data;
      for( i=1; i<csvData.length ; i++){
        requestTable.row.add( [csvData[i][0] , csvData[i][1], csvData[i][2], csvData[i][3], csvData[i][4], csvData[i][5], csvData[i][6], 
                                csvData[i][7] ] )
      }
      drawTables();
    }

    /*
    https://jsfiddle.net/rathore_gee/5vdb7t0L/
    $(document).contextmenu({
      delegate: ".dataTable td",
      menu: [
        {title: "Edit", cmd: "edit", uiIcon: "ui-icon-volume-off ui-icon-filter"}
      ],
      select: function(event, ui) {
        var celltext = ui.target.text();
        var colvindex = ui.target.parent().children().index(ui.target);
        var colindex = $('table thead tr th:eq('+colvindex+')').data('column-index');
        switch(ui.cmd){
          case "edit":
                    table
              .column( colindex )
              .search( '^' + celltext + '$', true )
              .draw();
            break;
        }
      },
      beforeOpen: function(event, ui) {
        var $menu = ui.menu,
          $target = ui.target,
          extraData = ui.extraData;
        ui.menu.zIndex(9999);
      }
    });
    */


  </script>
</html>
